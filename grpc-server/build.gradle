buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id "com.google.protobuf" version "0.8.10"
	id 'java'
}


group = 'betpawa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

ext {
	set('springCloudVersion', "Hoxton.RC1")
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'io.github.lognet:grpc-spring-boot-starter:3.4.3'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation "io.grpc:grpc-testing:1.25.0"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
	useJUnitPlatform()
}

sourceSets {
	main {
		proto {
			srcDir 'src/main/proto'
		}
		java {
			srcDirs 'src/main/java'
		}
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.10.0"
	}

	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.25.0'
		}
	}

	generateProtoTasks.generatedFilesBaseDir = 'generated-sources'

	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}